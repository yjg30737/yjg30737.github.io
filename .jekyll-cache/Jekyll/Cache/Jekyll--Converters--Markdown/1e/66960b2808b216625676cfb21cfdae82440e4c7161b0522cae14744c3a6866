I"W<p>파이썬 eval 함수는 문자열 형식으로 된 코드(예: print(‘123’))를 입력으로 받아 동적으로 계산하여 출력해주는 함수입니다.</p>

<p>사용예시</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">eval</span><span class="p">(</span><span class="s">"print('123')"</span><span class="p">)</span>
<span class="nb">eval</span><span class="p">(</span><span class="s">'1+2+3'</span><span class="p">)</span>
</code></pre></div></div>

<p>더 자세한 설명은 <a href="https://docs.python.org/3/library/functions.html#eval">python documentation</a>에서 보실 수 있습니다만, 대개는 위와 같이 문자열 형식으로 된 메소드나 수식을 계산하는 데 쓰입니다.</p>

<p>eval 함수가 유용한 것은 수식을 입력으로 받는 계산 메소드를 매우 쉽게 만들 수 있다는 점입니다.<br />
아래는 제가 제작한 <a href="https://github.com/yjg30737/pymeg.git">랜덤 사칙연산 생성기(pymeg)</a>입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">pymeg.expGenerator</span> <span class="kn">import</span> <span class="n">ExpGenerator</span>
<span class="kn">from</span> <span class="nn">pymeg.expStruct</span> <span class="kn">import</span> <span class="n">ExpStruct</span>

<span class="n">problem</span> <span class="o">=</span> <span class="n">ExpStruct</span><span class="p">()</span>
<span class="n">ext</span> <span class="o">=</span> <span class="n">ExpGenerator</span><span class="p">.</span><span class="n">get_problem</span><span class="p">(</span><span class="n">problem</span><span class="p">)</span> <span class="c1"># 문자열 형식의 랜덤 수식 생성하여 ext에 반환 
</span><span class="k">print</span><span class="p">(</span><span class="s">'값: {0}, 타입: {1}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ext</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">ext</span><span class="p">)))</span>
<span class="n">result</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">ext</span><span class="p">)</span> <span class="c1"># 문자열 형식의 수식을 동적으로 계산하여 숫자로 반환
</span><span class="k">print</span><span class="p">(</span><span class="s">'값: {0}, 타입: {1}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">result</span><span class="p">)))</span>
</code></pre></div></div>

<p>결과는 다음과 같습니다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>값: 5+8, 타입: &lt;class 'str'&gt; # 문자열(str) 형식의 랜덤 수식!
값: 13, 타입: &lt;class 'int'&gt; # 동적으로 계산된 이후 숫자로 반환되었기 때문에 int!
</code></pre></div></div>

<p>마찬가지로 응용프로그램인 계산기에도 응용할 수 있습니다. 대부분의 응용프로그램은 사용자에게 문자열로 입력을 받습니다.</p>

<p>python을 이용한 eval은 문자열을 수식으로 취급하여, 계산 이후 결과를 반환하기에 매우 편리합니다.</p>

<p>아래 또한 제가 제작한 <a href="https://github.com/yjg30737/pyqt-dark-calculator.git">계산기(pyqt-dark-calculator)</a>입니다.</p>

<p>※ UI 제작 패키지인 PyQt5로 작성되었습니다. py 파일이므로 PyQt5를 설치하셔야 합니다. exe파일처럼 그냥 실행되는 거 아닙니다..ㅜ</p>

<p>예를 들어 사용자가 1+2+3을 입력합니다. 1+2+3은 문자열 형식으로 프로그램에게 주어집니다.</p>

<p><img src="/images/eval_example1.png" alt="example1" /></p>

<p>그럼 eval(‘1+2+3’)하여 6을 반환하죠.</p>

<p><img src="/images/eval_example2.png" alt="example" /></p>

<p>eval은 math와 같은 외장 함수도 마찬가지로 지원합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">math</span> <span class="c1"># math와 같은 외장함수는 eval이든 아니든 꼭 import해줘야 합니다!
</span>
<span class="p">...</span>

<span class="nb">eval</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="s">'math.sqrt(float({0}))'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">last_n_regex</span><span class="p">))))</span> <span class="c1"># math.sqrt(float(..)) 제곱근 계산하는 함수입니다.
</span></code></pre></div></div>

<p>이렇듯 문자열을 수식으로 변환하는 것에 관련해서는 eval을 줄기차게 사용하는 것이 여러모로 편리합니다.</p>

<p><small>두 번째 포스팅입니다. 약간 설명충스러운 느낌이 들 수도 있습니다.. 죄송합니다..</small></p>

:ET