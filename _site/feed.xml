<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-02T18:42:07+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">YJG’s Think Tank</title><entry><title type="html">pip로 requirements.txt를 앳, file… 없이 가지런하게 만드는 방법</title><link href="http://localhost:4000/posts/how-to-make-requirements-txt-out-of-pip/" rel="alternate" type="text/html" title="pip로 requirements.txt를 앳, file… 없이 가지런하게 만드는 방법" /><published>2021-12-01T00:00:00+09:00</published><updated>2021-12-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-make-requirements-txt-out-of-pip</id><content type="html" xml:base="http://localhost:4000/posts/how-to-make-requirements-txt-out-of-pip/"><![CDATA[<p>pip로 requirements.txt 앳(@), file… 없이 가지런하게 만드는 방법입니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip freeze &gt; requirements.txt
</code></pre></div></div>
<p>위는 매우 전형적인 방식입니다. 입력하면 아래와 같은 파일이 생깁니다.</p>

<p><img src="http://localhost:4000/assets/images/pip_freeze_1.png" alt="pip_freeze_1" /></p>

<p>그런데 requirements.txt를 열어보시면 위와 같이 ~@~ 처럼 나오는 경우가 있습니다.
보통 “패키지이름==버전이름” 처럼 나와야 하는데 말이죠 ㅜ</p>

<p>보통 깃헙 저장소 소스에서 직접 다운받은 패키지를 저런 식으로 해석하더군요.</p>

<p>file… 같은 경우는 로컬이고 https… 같은 경우는 원격 저장소에서 받은 것입니다.</p>

<p>다시 다운로드할 때(특히 conda 쓰시는 분들)엔 상당히 애를 먹습니다!</p>

<p>파이썬 IDE인 파이참 같은 경우 requirements.txt에 있는 패키지들을 자동으로 인스톨해주지만, ~@~ 형식의 패키지는 인스톨 시 실패합니다.</p>

<p>그렇다면 어떻게 양식을 통일해야 하는가?</p>

<p><code class="language-plaintext highlighter-rouge">pip list --format=freeze &gt; requirements.txt</code></p>

<p>위와 같이 명령어를 작성하면 됩니다.</p>

<p><img src="http://localhost:4000/assets/images/pip_freeze_2.png" alt="pip_freeze_2" /></p>

<p>이렇게 하면 위와 같이 가지런히 나오게 됩니다.</p>

<p>하지만 명심해야할 것. 릴리즈가 되지 않은 패키지(conda를 쓴다면 conda 저장소에 없거나, pip가 검색할 수 없는 패키지이거나)는 여전히 인스톨되지 않을 것입니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[pip로 requirements.txt 앳(@), file… 없이 가지런하게 만드는 방법입니다.]]></summary></entry><entry><title type="html">파이참(PyCharm) 프로젝트 파일 안보이는 문제, 설정 창 인터프리터 부분의 nothing to show 문제 해결하기</title><link href="http://localhost:4000/posts/how-to-solve-the-nothing-to-show-problem-in-pycharm/" rel="alternate" type="text/html" title="파이참(PyCharm) 프로젝트 파일 안보이는 문제, 설정 창 인터프리터 부분의 nothing to show 문제 해결하기" /><published>2021-12-01T00:00:00+09:00</published><updated>2021-12-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-solve-the-nothing-to-show-problem-in-pycharm</id><content type="html" xml:base="http://localhost:4000/posts/how-to-solve-the-nothing-to-show-problem-in-pycharm/"><![CDATA[<p>파이참을 사용하다가 가끔씩 난관에 부딪칠 때가 많은데요.</p>

<p>있어야 할 프로젝트 파일 몇몇이 안보이는 일도 다 생깁니다.</p>

<p><img src="http://localhost:4000/assets/images/pycharm_nothing_to_show_2.png" alt="pycharm_nothing_to_show_2" /></p>

<p>위에서 내비게이션 뷰 모드를 Project에서 Project Files로 바꾸었을 때, Project Files에서 나오는 파일들이 Project에서도 나와야 되는데 안 나오죠!</p>

<p>그래서 프로젝트 구조 다시 설정해볼려고 설정 -&gt; 인터프리터 들어가보면 nothing to show라고만 나옵니다.</p>

<p><img src="http://localhost:4000/assets/images/pycharm_nothing_to_show.png" alt="pycharm_nothing_to_show" /></p>

<p>위 사진처럼, Project: … 와 같이 나와야 되는데 말이죠.</p>

<p>프로젝트는 분명히 존재하는데, 프로젝트 내에 있는 파일이 제대로 인식이 안되는 경우가 있다?</p>

<p>구글링해보니 <b>해답은 .idea 폴더를 삭제한 뒤 파이참을 다시 실행시키는 것이 답이라더군요.</b></p>

<p>그렇게 해보니까 다시 됩니다 ㅎㅎ 물론 사라졌던 .idea 폴더도 다시 생기고요.</p>

<p>※ .idea 폴더는 프로젝트 이름, 디렉토리 이름 등 정보를 포함한 xml 파일들이 있는 폴더입니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[파이참을 사용하다가 가끔씩 난관에 부딪칠 때가 많은데요.]]></summary></entry><entry><title type="html">파이참(PyCharm)에서 디렉토리 이름변경 시 java.io.ioexception 오류 해결방법</title><link href="http://localhost:4000/posts/how-to-fix-java-io-ioexception-in-pycharm/" rel="alternate" type="text/html" title="파이참(PyCharm)에서 디렉토리 이름변경 시 java.io.ioexception 오류 해결방법" /><published>2021-11-30T00:00:00+09:00</published><updated>2021-11-30T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-fix-java-io-ioexception-in-pycharm</id><content type="html" xml:base="http://localhost:4000/posts/how-to-fix-java-io-ioexception-in-pycharm/"><![CDATA[<p>파이참에서 디렉토리 이름변경 기능을 사용할 시 java.io.ioexception이 뜰 때가 있죠.</p>

<p>그럴때는 디렉토리에 있는 파일이 현재 사용중이거나 하는 경우입니다.</p>

<p>윈도우에서 폴더 지울때 “폴더 내 파일이 현재 사용중이기 때문에 지울 수 없습니다.” 하는 경우가 있죠. 그것과 비슷한 경우입니다.</p>

<p>관련 파일을 모두 종료하시고 다시 시도하시면 될 것입니다.</p>

<p>그래도 안된다면? 직접 디렉토리 이름을 탐색기에서 바꾸시면 됩니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[파이참에서 디렉토리 이름변경 기능을 사용할 시 java.io.ioexception이 뜰 때가 있죠.]]></summary></entry><entry><title type="html">CPU 잡아먹는 CompatTelRunner.exe이 하는 일과 비활성화하는 방법</title><link href="http://localhost:4000/posts/what-is-compattelrunners/" rel="alternate" type="text/html" title="CPU 잡아먹는 CompatTelRunner.exe이 하는 일과 비활성화하는 방법" /><published>2021-11-30T00:00:00+09:00</published><updated>2021-11-30T00:00:00+09:00</updated><id>http://localhost:4000/posts/what-is-compattelrunners</id><content type="html" xml:base="http://localhost:4000/posts/what-is-compattelrunners/"><![CDATA[<p>컴퓨터를 하다가 아무것도 안하고 있는데, 갑자기 CPU 돌아가는 소리가 크게 들립니다.</p>

<p>작업 관리자 열어보시면 그 이유가 다 나옵니다만, 윈도우를 os로 사용하시는 분들은 작업 관리자 목록을 CPU 자원 사용량 순으로 정렬할 때 CompatTelRunner.exe를 최상단에서 보신 경우가 꽤 있으실 겁니다.</p>

<h2>1. CompatTelRunner.exe는 무엇인가?</h2>

<p>윈도우 환경 향상을 위해 마소로 데이터를 자꾸자꾸 보내는 프로그램이라고 합니다.</p>

<p>보내는 양이 많다면 당연히 컴 자원을 많이 잡아먹겠죠? CPU가 팽팽 돌아갈 겁니다.</p>

<h2>2. 비활성화 방법</h2>

<p>저는 개인적으로 이런 걸 비활성화하는 것을 권장해드리지는 않습니다. 하지만 그렇게 하고 싶으신 분들을 위해 비활성화 방법을 알려드리자면요.</p>

<h4>1. 그룹정책 수정</h4>
<p>윈도우 작업표시줄 검색창이나 윈도키+R(실행) 열어서 gpedit.msc를 실행합니다.</p>

<p><b>컴퓨터 구성 -&gt; 관리 템플릿 -&gt; 윈도 구성요소 -&gt; 데이터 수집 및 preview 빌드 -&gt; 원격 분석 허용 클릭 -&gt; 사용 안함</b> 설정하시면 되겠고요.</p>

<h4>2. 레지스트리 수정</h4>
<p>regedit.exe(레지스트리 편집기)를 gpedit.msc 실행했던 방식으로 실행합니다.
<b>컴퓨터\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DataCollection</b>에서 타입은 32비트 DWORD값이며 이름은 AllowTelemetry고 값은 0인 변수를 만듭니다.</p>

<p><img src="http://localhost:4000/assets/images/compat_regedit.png" /></p>
<p>빈 공간 오른쪽 클릭해서 새로 만들기 하셔서 타입과 값 설정하면 위 사진처럼 나옵니다.</p>

<h4>3. 서비스에서 Connected User Experiences and Telemetry 시작유형 사용안함 설정</h4>

<p><img src="http://localhost:4000/assets/images/compat_service.png" /></p>
<h4>4. 재부팅</h4>

<p>이렇게 하면 되는 걸로 알고 있습니다. 안되면.. ㅜ</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[컴퓨터를 하다가 아무것도 안하고 있는데, 갑자기 CPU 돌아가는 소리가 크게 들립니다.]]></summary></entry><entry><title type="html">jekyll에서 특수기호 raw string으로 인식시키는 방법</title><link href="http://localhost:4000/posts/how-to-input-raw-string-into-jekyll-post/" rel="alternate" type="text/html" title="jekyll에서 특수기호 raw string으로 인식시키는 방법" /><published>2021-11-30T00:00:00+09:00</published><updated>2021-11-30T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-input-raw-string-into-jekyll-post</id><content type="html" xml:base="http://localhost:4000/posts/how-to-input-raw-string-into-jekyll-post/"><![CDATA[<p>깃헙 페이지 포스트 내용 중 코드를 쓸 시, 중괄호나 밑줄 두개 같이 jekyll에서 특수기호로 취급되는 낱말은 제대로 입력이 되지 않습니다. 그럴 때는 다음과 같이 하시면 됩니다!</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;% raw %&gt;
(...)
&lt;% endraw %&gt;
</code></pre></div></div>

<p>(…) 안에 코드를 넣으시면 됩니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[깃헙 페이지 포스트 내용 중 코드를 쓸 시, 중괄호나 밑줄 두개 같이 jekyll에서 특수기호로 취급되는 낱말은 제대로 입력이 되지 않습니다. 그럴 때는 다음과 같이 하시면 됩니다! &lt;% raw %&gt; (...) &lt;% endraw %&gt;]]></summary></entry><entry><title type="html">파이큐티(PyQt5)에서 윈도우 배경화면 설정하는 방법</title><link href="http://localhost:4000/posts/pyqt5-how-to-set-window-background/" rel="alternate" type="text/html" title="파이큐티(PyQt5)에서 윈도우 배경화면 설정하는 방법" /><published>2021-11-29T00:00:00+09:00</published><updated>2021-11-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/pyqt5-how-to-set-window-background</id><content type="html" xml:base="http://localhost:4000/posts/pyqt5-how-to-set-window-background/"><![CDATA[<p>파이큐티(PyQt5)에서 윈도우 배경화면 설정하기.. 참 어렵습니다. 윈도우 배경화면 설정하듯이 할 수 없는 것이 현실이죠.</p>

<p>Qt Designer 같은 경우도 qrc 파일인지 뭔지도 만들어야 되고.. 심히 직관적이지 못한 것이 현실입니다. (적어도 제가 아는 부분까지는요)</p>

<p>이 글에서는 Qt Designer로 배경화면을 설정하는 것이 아닌, 직접 코드를 짜서 배경화면을 설정하는 방법을 설명합니다.</p>

<p>윈도우(여기서는 QMainWindow)에 특정 파일 이미지를 배경화면으로 설정하는 코드는 다음과 같습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">filename</span> <span class="o">=</span> <span class="s">'abc.png'</span> <span class="c1"># abc.png는 파일명입니다!
</span><span class="bp">self</span><span class="p">.</span><span class="n">setStyleSheet</span><span class="p">(</span><span class="s">"QMainWindow {{ background-image: url('{0}'); }}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">filename</span><span class="p">))</span> 
<span class="c1"># 위 라인을 컴파일러는 
# self.setStyleSheet("QMainWindow { background-image: url('abc.png'); })
# 로 해석합니다."
</span>
</code></pre></div></div>

<p>※ ‘{{‘와 같이 중괄호를 2개 넣은 이유는, format 함수가 중괄호를 ‘{‘ 문자로 해석하도록 만들기 위해서입니다. (그거 파악하느라 약간 시간 소모했네요)</p>

<p>이걸 사용자 입력을 받아 배경화면 이미지 변경하고 싶은 pyqt5 소프트웨어에 붙여넣어서 filename을 사용자 입력 받는 변수로 설정해두면 될 것 같습니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[파이큐티(PyQt5)에서 윈도우 배경화면 설정하기.. 참 어렵습니다. 윈도우 배경화면 설정하듯이 할 수 없는 것이 현실이죠.]]></summary></entry><entry><title type="html">파이썬(Python)에서 메인 모듈 경로에 따른 상대경로 설정하는 방법</title><link href="http://localhost:4000/posts/pyqt5-how-to-set-relative-path-considering-main-module/" rel="alternate" type="text/html" title="파이썬(Python)에서 메인 모듈 경로에 따른 상대경로 설정하는 방법" /><published>2021-11-29T00:00:00+09:00</published><updated>2021-11-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/pyqt5-how-to-set-relative-path-considering-main-module</id><content type="html" xml:base="http://localhost:4000/posts/pyqt5-how-to-set-relative-path-considering-main-module/"><![CDATA[<p>이럴 때가 있죠. 메인 모듈에서 특정 경로에 있는 외부 모듈을 부를 때, 그 외부 모듈에서 필요한 css 파일 따위를 못 찾아서 <b>FileNotFoundError</b>를 내뱉는 경우 말입니다.</p>

<p>이렇게 되는 이유는 메인 모듈을 중심으로 그 파일의 위치를 탐색하기 때문입니다.
외부 모듈을 중심으로 탐색하는 것이 아니라요.</p>

<p>이럴 때는 우리가 실행하는 메인 모듈의 경로와 외부 모듈의 파일 경로를 상대 경로로 연결시킬 필요가 있겠죠.</p>

<p>그래야만 메인 모듈에서 외부 모듈의 css 파일 등을 로드할 수 있으니까요.
우선 짚고 넘어가야 할 변수와 함수를 설명드리겠습니다.</p>

<h4>1. __file__ 변수</h4>
<p>이 변수는 말이죠. 이 변수가 포함된 모듈 파일(.py)의 경로를 담고 있는 변수입니다.</p>
<h4>2. os.getcwd()</h4>
<p>외장 모듈인 os의 함수인 getcwd입니다. getcwd는 메인 모듈이 포함되어 있는 디렉토리를 리턴합니다.</p>
<h4>3. os.path.relpath(a, b)</h4>
<p>os.path.relpath(a, b)는 b에 대한 a의 상대 경로를 리턴합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">C</span><span class="p">:</span>\<span class="n">Users</span>\<span class="n">tende</span>\<span class="n">anaconda3</span>\<span class="n">envs</span>\<span class="n">projectToTestTheRemoteGitHubPackageMadeByMe</span>\<span class="n">lib</span>\<span class="n">site</span><span class="o">-</span><span class="n">packages</span>\<span class="n">pyqt_dark_calculator</span>\<span class="n">main</span><span class="p">.</span><span class="n">py</span>
<span class="c1"># a
</span><span class="n">C</span><span class="p">:</span>\<span class="n">Users</span>\<span class="n">tende</span>\<span class="n">PycharmProjects</span>\<span class="n">projectToTestTheRemoteGitHubPackageMadeByMe</span> 
<span class="c1"># b
</span><span class="p">..</span>\<span class="p">..</span>\<span class="n">anaconda3</span>\<span class="n">envs</span>\<span class="n">projectToTestTheRemoteGitHubPackageMadeByMe</span>\<span class="n">lib</span>\<span class="n">site</span><span class="o">-</span><span class="n">packages</span>\<span class="n">pyqt_dark_calculator</span>\<span class="n">main</span><span class="p">.</span><span class="n">py</span>
<span class="c1"># os.path.relpath(a, b)
</span></code></pre></div></div>

<p>이 방법을 다음과 같이 활용할 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">css_file_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">relpath</span><span class="p">(</span><span class="n">__file__</span><span class="p">,</span> <span class="n">os</span><span class="p">.</span><span class="n">getcwd</span><span class="p">())),</span> <span class="sa">r</span><span class="s">'style\button.css'</span><span class="p">)</span>
</code></pre></div></div>

<p>위 코드는 제가 제작했던 <a href="https://github.com/yjg30737/pyqt-dark-calculator.git">계산기</a> 코드의 일부입니다. 이것을 깃으로 인스톨한 뒤 임포트하여 사용할 사람들을 위해 위와 같은 코드를 작성하였습니다.</p>

<p>외부 모듈에서 필요로 하는 style\button.css를 메인 모듈에서 찾아서 로드할 수 있게 하려고 css_file_path(button.css 파일 경로)를 메인 모듈 기준으로 한 상대 경로로 만들었습니다.</p>

<p>아 참, 위 코드에서 사용되었던 <b>os.path.dirname(filename)</b>은 파일을 인자로 그 파일의 폴더를 리턴해주는 함수입니다. 또 <b>os.path.join(a, b)</b> 함수는 a와 b 경로를 서로 연결시켜줍니다. a는 디렉토리여야 하고, b는 a의 하위에 위치한 파일이어야 합니다!</p>

<p>특정 리소스 파일이 필요한 외부 모듈을 작성할 때 필요한 코드 같습니다. 다른 방법이 있는지 아직 모르겠지만, 일단 저는 저 방식으로 하니까 되더군요.</p>

<p>딱히 뭐라고 포스팅을 끝내야할지 모르겠네요! 그럼!</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[이럴 때가 있죠. 메인 모듈에서 특정 경로에 있는 외부 모듈을 부를 때, 그 외부 모듈에서 필요한 css 파일 따위를 못 찾아서 FileNotFoundError를 내뱉는 경우 말입니다.]]></summary></entry><entry><title type="html">깃배쉬에서 사용하는 기본적인 명령어(git init, git pull..) 설명</title><link href="http://localhost:4000/posts/basic-commands-of-github-bash/" rel="alternate" type="text/html" title="깃배쉬에서 사용하는 기본적인 명령어(git init, git pull..) 설명" /><published>2021-11-27T00:00:00+09:00</published><updated>2021-11-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/basic-commands-of-github-bash</id><content type="html" xml:base="http://localhost:4000/posts/basic-commands-of-github-bash/"><![CDATA[<p>깃배쉬 기본적인 명령어를 알려드리겠습니다. (사실상 첫 포스팅이네요.)<br /></p>
<div>
  <h2>1. 우선 짚고 넘어가야할 용어</h2>
    <p>
    <b>저장소(Repository)</b>: 줄여서 Repo라고 합니다. 프로젝트(프로그램 작업해놓은 것들)를 저장하는 곳입니다.
    </p>
    <p><img src="http://localhost:4000/assets/images/repo.png" /></p>
    <p>위 사진에 있는 pyqt-font-dialog, pyqt-dark.. 등등이 저장소입니다</p>
    <p>
    <b>브랜치(Branch)</b>: 브랜치는 프로젝트 작업장 같은 겁니다. 하나의 저장소는 여러 브랜치를 가질 수 있습니다. 브랜치는 하나 이상 꼭 있어야 됩니다! 그래야 작업을 할 수 있으니까요.
    </p>
</div>

<div>
  <h2>2. 명령어 쓰는 곳</h2>
  <b>GitHub Bash</b>입니다.<br /> 리눅스의 셸 중에 배쉬가 있고, 윈도우의 cmd(명령 프롬프트)도 셸의 일종이죠. 깃헙도 그 셸이 있는데 그게 바로 GitHub Bash입니다. 구글에서 검색하시면 곧바로 다운가능합니다.<br /><br />
</div>

<div>
  <h2>3. 기본적인 명령어</h2>
  <p>우선 원하는 폴더에 가셔서 깃 배쉬를 켭니다. 오른쪽 클릭하면 컨텍스트 메뉴에 Git Bash Here이 있을텐데 그거 누르면 깃 배쉬가 나올 것입니다. 아니면 cd 명령어(현재 참조하는 폴더 바꾸는 명령어. cd C:/.. 처럼 사용함)로 가셔도 되고요.</p>
  <p><b>git config --global user.name "이름"</b> // 님 이름 영어로 적으시면 됩니다.</p>
  <p><b>git config --global user.email "깃허브 이메일"</b> // 님이 깃허브에 가입했을 때 입력한 이메일을 여기서 입력하세요.</p>
  <p><small>※ 위 두 명령어는 깃헙배쉬 다운받고 나서 처음 사용할때만 쓰고 그 뒤엔 할 필요 없습니다. 대신에 처음엔 꼭 하셔야 합니다. 안그러면 님 이메일 뭔지 계속 물어봅니다.</small></p>

  <p><b>git init</b> // 깃 명령어 사용가능한 폴더로 만듭니다. 이 명령 입력하고 나면 .git이라는 숨겨진 폴더가 생깁니다. (숨김 파일/폴더 볼 수 있게 탐색기 설정하면 보입니다.)<br />
  .git 폴더는 깃 저장소를 나타내는 표식이라고 보면 됩니다.</p>
  <p><small>※ git init 명령만 입력하면 master 브랜치가 디폴트로 생깁니다. git init abs123을 입력하면 abc123이라는 폴더가 생기고 그 안에 저장소가 생깁니다.</small></p>

  <p><b>git pull</b> // 원격 저장소의 파일들을 내 저장소에 가지고 옵니다.<br /> 원격저장소가 있다면 꼭 하셔야 됩니다.<br />
  님이 혼자 쓰시는 거라고 하더라도, 작업할때는 git pull 먼저 부르는게 좋은 습관입니다.</p>

  <p>그런데 처음부터 다짜고짜 git pull 입력하면 "There is no tracking information for the current branch... 이런 메시지를 뱉어내면서 파일 안 가져와줄거라고 말합니다. 그래서 먼저 어느 원격저장소에서 갖고와야 되는지를 정한 뒤에 이놈한테 좀 갖고 와달라고 말해야겠죠.<br />다음 두 명령어를 입력하면 됩니다.
  
  <p><b>git remote add origin https://github.com/username/reponame.git</b> // 뒤에 https...는 외부저장소 url입니다. 외부저장소와 로컬 저장소를 연결합니다. origin은 외부 저장소를 일컫는 말입니다.<br />
  (외부 저장소의 실제 이름이 아니라, git에서 관용적으로 사용하는 말입니다.)<br />
  <b>git pull origin master</b> // origin(외부저장소)에서 master(로컬 저장소의 브랜치)로 파일을 갖고 옵니다. 이 명령어를 입력하면, 실제로 그곳에 있는 파일들이 로컬 저장소 폴더에 추가됩니다.</p>

  <p>이후에 pull할 땐 git remote~는 입력할 필요가 없습니다. 하지만 git pull origin master는 계속해서 입력해야되는데요. <br /><b>git branch --set-upstream-to=origin/master master</b>를 입력하면 git pull만 입력해도 됩니다.<br />--set-upstream-to=origin..는 origin을 파일을 받아오는 upstream(상류)로 간주하겠다는 것입니다.</p>

  <p><b>touch abc.txt</b> // abc.txt라는 파일을 추가합니다. 리눅스 하시는 분들은 touch 명령어가 익숙하실겁니다. (근데 이런 명령어 아니라도 그냥 다른데서 파일 갖고와도 됩니다.)</p>

  <p><b>git status</b> // 지금 저장소 상태를 보는 겁니다. 정확히는 브랜치를 보는거죠.
  출력은 대략 다음과 같이 나옵니다. 해석해드리자면요.

  
<figure class="highlight"><pre><code class="language-git" data-lang="git">  On branch main // 지금 사용자가 사용하는 브랜치 이름: main
  Your branch is up to date with 'origin/main'. // 
  님 브랜치가 원격저장소(origin/main)랑 같은 최신버전이라는 뜻입니다. 
  즉 파일 목록이 같다는 거죠.
  여기서 origin은 원격저장소를 일컫는 이름이고 main은 그 브랜치 이름입니다.

  Untracked files:
    (use "git add &lt;file&gt;..." to include in what will be committed)
          "_posts/2021..(생략)

  nothing added to commit but untracked files present (use "git add" to track)

  // Untracked files...는 아직 로컬 저장소가 인식을 못하는 파일이 있다는 겁니다. 
  파일을 추가해줘도 저장소가 인식을 자동으로 안해주거든요. 
  USB나 이어폰 노트북에 꽃을때 일일이 연결하겠냐고 물어보는 거랑 비슷한 거죠. 
  우리가 "git add" 명령어로 인식시켜줘야 합니다. 
  (use "git add" to track 메시지 보이시죠)
  </code></pre></figure>


  <p><b>git add .</b> // 로컬 저장소한테 제가 추가한 파일들 인식하라는 명령어입니다. add 다음의 .는 루트폴더(저장소 최상위폴더)를 말합니다.<br />
  루트폴더부터 추가된 모든 파일들 인식하라는 거니 전부 다 인식하라는 것이죠.</p>

  <p><b>git commit -m "First commit"</b> // 커밋하기(내 저장소에 변경여부 저장) -m "abc"는 커밋메시지를 "First commit"으로 하겠다는 겁니다. 커밋메시지는 위키의 수정코멘트랑 같은 건데 "내가 파일을 어떠어떠하게 변경했다"라고 사람들에게 알려주는 겁니다.</p>

  <p><img src="http://localhost:4000/assets/images/commit_message.png" /></p>
  
  <p>위는 깃헙 사이트에서 볼 수 있는 저장소 파일 목록입니다. yjg30737(제 아이디) 옆에 있는 <cite>Replace example.png</cite>는 가장 최근 커밋메시지고 파일 목록이랑 2 days ago(2일전에 커밋) 사이에 있는 것들도 마찬가지로 커밋메시지입니다.</p>

  <p><b>git push</b> // 원격 저장소에도 저장(반영)</p>
  <p>이것도 바로는 안될텐데 아까 pull 때처럼 <b>git push origin master</b> 하시면 됩니다. --set-upstream하셨으면 이것도 git push만 해도 됩니다.</p>

  <p><b>rm -rf .git</b> // 로컬 깃 저장소 삭제 명령어입니다. 물론 탐색기에서 직접 지우셔도 됩니다. 혹시나 깃헙 배쉬 연습하시다가 이상하게 되어버려서 다시 해야겠다고 생각하신다면? 삭제하시면 됩니다.</p>


<div>
  <h2>5. 첫번째 포스트..</h2>
  <p>힘드네요. 일단 그거 얘기하고 싶었고 또..<br />
  제가 이미지도 곁들이는 등 많은 노력을 기울였지만 두서있게 설명을 잘 못한 것도 있고, html 등 웹사이트 코딩에 약한편이라 제대로 설명을 못한게 한이 맺힙니다.. 아니 뭐 그정도는 아닐지도..<br />
  그래도 저도 배운게 어느 정도 있는 것 같고, 누군가한테 설명을 하는 능력(설명력)이 향상되었다는 느낌이 샘솟네요.<br /> 
  여러분들이 읽을 필요 없는 글이지만, 그냥 제가 적고 싶어서 적어봤습니다ㅎ</p>
</div></p></p></div>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[깃배쉬 기본적인 명령어를 알려드리겠습니다. (사실상 첫 포스팅이네요.) 1. 우선 짚고 넘어가야할 용어 저장소(Repository): 줄여서 Repo라고 합니다. 프로젝트(프로그램 작업해놓은 것들)를 저장하는 곳입니다. 위 사진에 있는 pyqt-font-dialog, pyqt-dark.. 등등이 저장소입니다 브랜치(Branch): 브랜치는 프로젝트 작업장 같은 겁니다. 하나의 저장소는 여러 브랜치를 가질 수 있습니다. 브랜치는 하나 이상 꼭 있어야 됩니다! 그래야 작업을 할 수 있으니까요.]]></summary></entry><entry><title type="html">파이썬(Python) eval 함수 설명, 사용방법</title><link href="http://localhost:4000/posts/python-eval-usage/" rel="alternate" type="text/html" title="파이썬(Python) eval 함수 설명, 사용방법" /><published>2021-11-27T00:00:00+09:00</published><updated>2021-11-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/python-eval-usage</id><content type="html" xml:base="http://localhost:4000/posts/python-eval-usage/"><![CDATA[<p>파이썬 eval 함수는 문자열 형식으로 된 코드(예: print(‘123’))를 입력으로 받아 동적으로 계산하여 출력해주는 함수입니다.</p>

<p>사용예시</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">eval</span><span class="p">(</span><span class="s">"print('123')"</span><span class="p">)</span>
<span class="nb">eval</span><span class="p">(</span><span class="s">'1+2+3'</span><span class="p">)</span>
</code></pre></div></div>

<p>더 자세한 설명은 <a href="https://docs.python.org/3/library/functions.html#eval">python documentation</a>에서 보실 수 있습니다만, 대개는 위와 같이 문자열 형식으로 된 메소드나 수식을 계산하는 데 쓰입니다.</p>

<p>eval 함수가 유용한 것은 수식을 입력으로 받는 계산 메소드를 매우 쉽게 만들 수 있다는 점입니다.<br />
아래는 제가 제작한 <a href="https://github.com/yjg30737/pymeg.git">랜덤 사칙연산 생성기(pymeg)</a>입니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">pymeg.expGenerator</span> <span class="kn">import</span> <span class="n">ExpGenerator</span>
<span class="kn">from</span> <span class="nn">pymeg.expStruct</span> <span class="kn">import</span> <span class="n">ExpStruct</span>

<span class="n">problem</span> <span class="o">=</span> <span class="n">ExpStruct</span><span class="p">()</span>
<span class="n">ext</span> <span class="o">=</span> <span class="n">ExpGenerator</span><span class="p">.</span><span class="n">get_problem</span><span class="p">(</span><span class="n">problem</span><span class="p">)</span> <span class="c1"># 문자열 형식의 랜덤 수식 생성하여 ext에 반환 
</span><span class="k">print</span><span class="p">(</span><span class="s">'값: {0}, 타입: {1}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">ext</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">ext</span><span class="p">)))</span>
<span class="n">result</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="n">ext</span><span class="p">)</span> <span class="c1"># 문자열 형식의 수식을 동적으로 계산하여 숫자로 반환
</span><span class="k">print</span><span class="p">(</span><span class="s">'값: {0}, 타입: {1}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">result</span><span class="p">,</span> <span class="nb">type</span><span class="p">(</span><span class="n">result</span><span class="p">)))</span>
</code></pre></div></div>

<p>결과는 다음과 같습니다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>값: 5+8, 타입: &lt;class 'str'&gt; # 문자열(str) 형식의 랜덤 수식!
값: 13, 타입: &lt;class 'int'&gt; # 동적으로 계산된 이후 숫자로 반환되었기 때문에 int!
</code></pre></div></div>

<p>마찬가지로 응용프로그램인 계산기에도 응용할 수 있습니다. 대부분의 응용프로그램은 사용자에게 문자열로 입력을 받습니다.</p>

<p>python을 이용한 eval은 문자열을 수식으로 취급하여, 계산 이후 결과를 반환하기에 매우 편리합니다.</p>

<p>아래 또한 제가 제작한 <a href="https://github.com/yjg30737/pyqt-dark-calculator.git">계산기(pyqt-dark-calculator)</a>입니다.</p>

<p>※ UI 제작 패키지인 PyQt5로 작성되었습니다. py 파일이므로 PyQt5를 설치하셔야 합니다. exe파일처럼 그냥 실행되는 거 아닙니다..ㅜ</p>

<p>예를 들어 사용자가 1+2+3을 입력합니다. 1+2+3은 문자열 형식으로 프로그램에게 주어집니다.</p>

<p><img src="/assets/images/eval_example1.png" alt="example1" /></p>

<p>그럼 eval(‘1+2+3’)하여 6을 반환하죠.</p>

<p><img src="/assets/images/eval_example2.png" alt="example" /></p>

<p>eval은 math와 같은 외장 함수도 마찬가지로 지원합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">math</span> <span class="c1"># math와 같은 외장함수는 eval이든 아니든 꼭 import해줘야 합니다!
</span>
<span class="p">...</span>

<span class="nb">eval</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="s">'math.sqrt(float({0}))'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">last_n_regex</span><span class="p">))))</span> <span class="c1"># math.sqrt(float(..)) 제곱근 계산하는 함수입니다.
</span></code></pre></div></div>

<p>이렇듯 문자열을 수식으로 변환하는 것에 관련해서는 eval을 줄기차게 사용하는 것이 여러모로 편리합니다.</p>

<p><small>두 번째 포스팅입니다. 약간 설명충스러운 느낌이 들 수도 있습니다.. 죄송합니다..</small></p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[파이썬 eval 함수는 문자열 형식으로 된 코드(예: print(‘123’))를 입력으로 받아 동적으로 계산하여 출력해주는 함수입니다.]]></summary></entry><entry><title type="html">파이썬(Python)에서 숫자 사이에 콤마(1,234,567…) 넣기</title><link href="http://localhost:4000/posts/python-comma-between-number/" rel="alternate" type="text/html" title="파이썬(Python)에서 숫자 사이에 콤마(1,234,567…) 넣기" /><published>2021-11-27T00:00:00+09:00</published><updated>2021-11-27T00:00:00+09:00</updated><id>http://localhost:4000/posts/python-comma-between-number</id><content type="html" xml:base="http://localhost:4000/posts/python-comma-between-number/"><![CDATA[<p>숫자를 사용자에게 보여주는 프로그램에서는 수치를 확연하게 보여주기 위해 중간중간에 쉼표를 붙이죠.</p>

<p>또한 소수점 아래에는 쉼표를 붙이지 않습니다. 그렇기에 소수점이 있을 때와 없을 때를 구분하여 코드를 짜야 하겠죠.</p>

<p>코드 예시</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">text</span> <span class="o">=</span> <span class="s">'1234567890.9876543210'</span> <span class="c1"># 여기서 초기값은 문자열입니다!
</span>    <span class="k">if</span> <span class="n">text</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'.'</span><span class="p">)</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span> <span class="c1"># 소수점 없을 때
</span>        <span class="n">text</span> <span class="o">=</span> <span class="s">'{:,}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">text</span><span class="p">))</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">pre_dot</span><span class="p">,</span> <span class="n">post_dot</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">'.'</span><span class="p">)</span> <span class="c1"># 소수점 있을 때. 소수점 기준으로 앞과 뒤를 나눕니다. 
</span>        <span class="n">text</span> <span class="o">=</span> <span class="s">'{:,}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">pre_dot</span><span class="p">))</span> <span class="o">+</span> <span class="s">'.'</span> <span class="o">+</span> <span class="n">post_dot</span> 

    <span class="k">print</span><span class="p">(</span><span class="n">text</span><span class="p">)</span> 
</code></pre></div></div>

<p>결과값</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1,234,567,890.9876543210
</code></pre></div></div>

<p>파이썬 3.6버전 이상 기준으로 더 짧은 코드로도 가능하다더군요.</p>

<p>짧은 코드 예시</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">num</span> <span class="o">=</span> <span class="mf">1234567890.9876543210</span> <span class="c1"># 여기서 초기값은 문자열이 아니라 정수(int)입니다.
</span><span class="n">num</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">num</span><span class="p">:,</span><span class="si">}</span><span class="s">"</span>
<span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
</code></pre></div></div>

<p>결과값</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1,234,567,890.9876542
</code></pre></div></div>

<p>소수점 아래 부분이 서로 결과가 다르네요. 정확하게 계산하는 것을 원한다면 첫 번째 방법으로, 소수점 신경 안쓰고 쉽게 계산하겠다! 싶으시면 두 번째 방법으로 하시면 될 것 같습니다.</p>

<p>파이썬을 이용한 응용 프로그램 개발에서도 물론 활용 가능합니다. 얼마 전 제작했던 숫자 입력용 QLineEdit(PyQt5 위젯)인 <a href="https://github.com/yjg30737/number-lineedit.git">number-lineedit</a>에서 붙리언 값을 입력으로 받는 setComma라는 메서드로 쉼표를 토글할 수 있게 했습니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[숫자를 사용자에게 보여주는 프로그램에서는 수치를 확연하게 보여주기 위해 중간중간에 쉼표를 붙이죠.]]></summary></entry></feed>