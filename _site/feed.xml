<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-30T14:46:00+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">YJG’s Think Tank</title><entry><title type="html">How to solve CMake error in Flutter</title><link href="http://localhost:4000/posts/how-to-solve-cmake-error-flutter/" rel="alternate" type="text/html" title="How to solve CMake error in Flutter" /><published>2022-07-03T00:00:00+09:00</published><updated>2022-07-03T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-solve-cmake-error-flutter</id><content type="html" xml:base="http://localhost:4000/posts/how-to-solve-cmake-error-flutter/"><![CDATA[<p>Error message generated after Visual Studio upgrade:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>CMake Error: Error: generator : Visual Studio 17 2022
Does not match the generator used previously: Visual Studio 16 2019
Either remove the CMakeCache.txt file and CMakeFiles directory or choose a different binary directory.
Exception: Unable to generate build files
</code></pre></div></div>

<p>So how can we solve this?</p>

<p>In the project path, enter a command like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>flutter clean
flutter run -d windows
</code></pre></div></div>

<p>That’s it!</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[Error message generated after Visual Studio upgrade:]]></summary></entry><entry><title type="html">How to save Wikipedia document to local text file with Python?</title><link href="http://localhost:4000/posts/python-how-to-get-wikipedia-text/" rel="alternate" type="text/html" title="How to save Wikipedia document to local text file with Python?" /><published>2022-07-01T00:00:00+09:00</published><updated>2022-07-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/python-how-to-get-wikipedia-text</id><content type="html" xml:base="http://localhost:4000/posts/python-how-to-get-wikipedia-text/"><![CDATA[<p>Python is a programming language used in many fields such as web crawling.</p>

<p>Getting the Wikipedia document’s content is also simple in Python.</p>

<p>All you need is the <a href="https://pypi.org/project/bs4/">bs4</a>, <a href="https://pypi.org/project/urllib3/">urllib3</a> and <a href="https://pypi.org/project/certifi/">certifi</a> packages.</p>

<p><strong>bs4</strong> is dummy package of <a href="https://pypi.org/project/beautifulsoup4/">beautifulsoup4</a>. beautifulsoup4 is a library that makes it easy to scrape information from web pages. This package is often used for web crawling.</p>

<p><strong>urllib3</strong> is used for HTTP request. You need “request” if you want to scrape information from web page, and this will handle it.</p>

<p><strong>certifi</strong> is used for validating the trustworthiness of SSL certificate while verifying the identity of TLS hosts. Simply put, you can’t be trusted if you won’t install this.</p>

<p>If the above 3 packages do not exist, you must install them. Here’s how to install it:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python <span class="nt">-m</span> pip <span class="nb">install </span>certifi

python <span class="nt">-m</span> pip <span class="nb">install </span>urllib3

python <span class="nt">-m</span> pip <span class="nb">install </span>bs4
</code></pre></div></div>

<p>Write the following code.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">certifi</span>
<span class="kn">import</span> <span class="nn">urllib3</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="kn">import</span> <span class="nn">re</span><span class="p">,</span> <span class="n">os</span>

<span class="k">def</span> <span class="nf">convertWikiToText</span><span class="p">(</span><span class="n">url</span><span class="p">):</span>
    <span class="c1"># check if it is Wikipedia based URL
</span>    <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">search</span><span class="p">(</span><span class="sa">r</span><span class="s">'\.wikipedia\.org'</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span> 
    <span class="k">if</span> <span class="n">m</span><span class="p">:</span>
        <span class="n">http</span> <span class="o">=</span> <span class="n">urllib3</span><span class="p">.</span><span class="n">PoolManager</span><span class="p">(</span><span class="n">ca_certs</span><span class="o">=</span><span class="n">certifi</span><span class="p">.</span><span class="n">where</span><span class="p">())</span>
        <span class="c1"># request and get the response info
</span>        <span class="n">resp</span> <span class="o">=</span> <span class="n">http</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="s">'GET'</span><span class="p">,</span> <span class="n">url</span><span class="p">)</span>
        <span class="c1"># decode the response data to make it look better
</span>        <span class="n">resp_data</span> <span class="o">=</span> <span class="n">resp</span><span class="p">.</span><span class="n">data</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="c1"># if success (200 means success, 404 means error as you know)
</span>        <span class="k">if</span> <span class="n">resp</span><span class="p">.</span><span class="n">status</span> <span class="o">==</span> <span class="mi">200</span><span class="p">:</span>
            <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">resp_data</span><span class="p">,</span> <span class="n">features</span><span class="o">=</span><span class="s">'lxml'</span><span class="p">)</span>
            <span class="c1"># get the title of document.
</span>            <span class="n">title</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'title'</span><span class="p">).</span><span class="n">text</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">' - '</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
            <span class="c1"># Tag that has bodyContent as an id contains all the contents in the document, so find the info of the tag.
</span>            <span class="n">content_tag</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="nb">id</span><span class="o">=</span><span class="s">'bodyContent'</span><span class="p">)</span>
            <span class="c1"># get the text of it.
</span>            <span class="n">content</span> <span class="o">=</span> <span class="n">content_tag</span><span class="p">.</span><span class="n">text</span>
            <span class="n">filename</span> <span class="o">=</span> <span class="n">title</span> <span class="o">+</span> <span class="s">'.txt'</span>
            <span class="c1"># create the text file
</span>            <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="s">'w'</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">'utf-8'</span><span class="p">)</span>
            <span class="n">f</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
            <span class="n">f</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
            <span class="c1"># start the file right away
</span>            <span class="n">os</span><span class="p">.</span><span class="n">startfile</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">raise</span> <span class="nb">Exception</span><span class="p">(</span><span class="s">'This is not the right URL'</span><span class="p">)</span>

<span class="n">convertWikiToText</span><span class="p">(</span><span class="s">'https://en.m.wikipedia.org/wiki/Chocolatey'</span><span class="p">)</span>
</code></pre></div></div>

<p>You will get the wikipedia document as a text file.</p>

<p><img src="/assets/images/python_how_to_get_wikipedia_text/1.png" alt="example" /></p>

<p>If you see more about this, check my GitHub repo “<a href="https://github.com/yjg30737/wiki-offline.git">wiki-offline</a>”.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[Python is a programming language used in many fields such as web crawling.]]></summary></entry><entry><title type="html">How to show animated SVG icon in PyQt5</title><link href="http://localhost:4000/posts/pyqt-how-to-show-animated-svg/" rel="alternate" type="text/html" title="How to show animated SVG icon in PyQt5" /><published>2022-06-14T00:00:00+09:00</published><updated>2022-06-14T00:00:00+09:00</updated><id>http://localhost:4000/posts/pyqt-how-to-show-animated-svg</id><content type="html" xml:base="http://localhost:4000/posts/pyqt-how-to-show-animated-svg/"><![CDATA[<p>So, here we are. The second English post.</p>

<p>How to show animated SVG icon? Quite simple.</p>

<p>But before you start it, download the sample <a href="https://loading.io/asset/579298">SVG icon</a> first.</p>

<p>Make directory name ico and move downloaded SVG icon to directory you made.</p>

<p>Then make the Python script like below.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">sys</span>

<span class="kn">from</span> <span class="nn">PyQt5.QtSvg</span> <span class="kn">import</span> <span class="n">QSvgWidget</span>
<span class="kn">from</span> <span class="nn">PyQt5.QtWidgets</span> <span class="kn">import</span> <span class="n">QApplication</span>


<span class="c1"># QSvgWidget is good to use when you want to make SVG-related widget.
</span><span class="k">class</span> <span class="nc">AnimatedSvgExample</span><span class="p">(</span><span class="n">QSvgWidget</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">__initUi</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">__initUi</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">renderer</span><span class="p">()</span>
        <span class="c1"># set FPS of SVG animation.
</span>        <span class="n">r</span><span class="p">.</span><span class="n">setFramesPerSecond</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span> 
        <span class="n">ico_filename</span> <span class="o">=</span> <span class="s">'ico/rolling.svg'</span>
        <span class="c1"># set SVG icon to QSvgWidget.
</span>        <span class="n">r</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">ico_filename</span><span class="p">)</span> 


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">app</span> <span class="o">=</span> <span class="n">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span>
    <span class="n">r</span> <span class="o">=</span> <span class="n">AnimatedSvgExample</span><span class="p">()</span>
    <span class="n">r</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
    <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="n">app</span><span class="p">.</span><span class="n">exec_</span><span class="p">())</span>
</code></pre></div></div>

<p>Copy and run.</p>

<p><img src="/assets/images/pyqt_how_to_show_animated_svg/1.png" alt="example" /></p>

<p>There is <a href="https://github.com/yjg30737/pyqt-animated-svg-example.git">GitHub repository</a> i made as an example.</p>

<p>Well, that’s it.</p>

<p>But i gotta say this method is not perfect.</p>

<p><b>The problem is PyQt or Python whatever only accept the animateTransform.</b></p>

<p>So far i can’t find how to let them properly handle with other animate-related tag.</p>

<p>So bottom line, this method(which is only method in Qt by the way) works to SVG icon which has animateTransform, not animate/animateMotion.</p>

<p>I will find out how to solve that problem, definitely.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[So, here we are. The second English post.]]></summary></entry><entry><title type="html">How to show basic window in PyQt5</title><link href="http://localhost:4000/posts/pyqt-basic-window/" rel="alternate" type="text/html" title="How to show basic window in PyQt5" /><published>2022-06-10T00:00:00+09:00</published><updated>2022-06-10T00:00:00+09:00</updated><id>http://localhost:4000/posts/pyqt-basic-window</id><content type="html" xml:base="http://localhost:4000/posts/pyqt-basic-window/"><![CDATA[<p>Finally, first English post.</p>

<p>I will teach you how to show basic window in PyQt5.</p>

<p>This is very basic post as well.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">PyQt5.QtWidgets</span> <span class="kn">import</span> <span class="n">QMainWindow</span><span class="p">,</span> <span class="n">QLabel</span><span class="p">,</span> <span class="n">QApplication</span>


<span class="k">class</span> <span class="nc">MainWindow</span><span class="p">(</span><span class="n">QMainWindow</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">__initUi</span><span class="p">()</span>
        
    <span class="k">def</span> <span class="nf">__initUi</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">lbl</span> <span class="o">=</span> <span class="n">QLabel</span><span class="p">(</span><span class="s">'Hello World!'</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">setCentralWidget</span><span class="p">(</span><span class="n">lbl</span><span class="p">)</span>
        

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="kn">import</span> <span class="nn">sys</span>

    <span class="n">app</span> <span class="o">=</span> <span class="n">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span>
    <span class="n">w</span> <span class="o">=</span> <span class="n">MainWindow</span><span class="p">()</span>
    <span class="n">w</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
    <span class="n">app</span><span class="p">.</span><span class="n">exec_</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/assets/images/pyqt_basic_window/1.png" alt="example" /></p>

<p>Super basic. But QLabel is little off from the center. Align it:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># know the drill, right?
</span><span class="o">//</span><span class="p">..</span>
    <span class="k">def</span> <span class="nf">__initUi</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">lbl</span> <span class="o">=</span> <span class="n">QLabel</span><span class="p">(</span><span class="s">'Hello World!'</span><span class="p">)</span>
        <span class="n">lbl</span><span class="p">.</span><span class="n">setAlignment</span><span class="p">(</span><span class="n">Qt</span><span class="p">.</span><span class="n">AlignCenter</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">setCentralWidget</span><span class="p">(</span><span class="n">lbl</span><span class="p">)</span>
<span class="o">//</span><span class="p">..</span>
</code></pre></div></div>

<p><img src="/assets/images/pyqt_basic_window/2.png" alt="example" /></p>

<p>So basic, only label? I don’t think this actually is capable of doing something.</p>

<p>At least he needs some friend to hang around with.</p>

<p>How about QTextEdit?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">PyQt5.QtWidgets</span> <span class="kn">import</span> <span class="n">QMainWindow</span><span class="p">,</span> <span class="n">QLabel</span><span class="p">,</span> <span class="n">QApplication</span><span class="p">,</span> <span class="n">QVBoxLayout</span><span class="p">,</span> <span class="n">QTextEdit</span><span class="p">,</span> <span class="n">QWidget</span>
<span class="kn">from</span> <span class="nn">PyQt5.QtCore</span> <span class="kn">import</span> <span class="n">Qt</span>


<span class="k">class</span> <span class="nc">MainWindow</span><span class="p">(</span><span class="n">QMainWindow</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">__initUi</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">__initUi</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">lbl</span> <span class="o">=</span> <span class="n">QLabel</span><span class="p">(</span><span class="s">'Hello Text Editor!'</span><span class="p">)</span>
        <span class="n">lbl</span><span class="p">.</span><span class="n">setAlignment</span><span class="p">(</span><span class="n">Qt</span><span class="p">.</span><span class="n">AlignCenter</span><span class="p">)</span>
        <span class="n">te</span> <span class="o">=</span> <span class="n">QTextEdit</span><span class="p">()</span> <span class="c1"># new friend here!
</span>
        <span class="n">lay</span> <span class="o">=</span> <span class="n">QVBoxLayout</span><span class="p">()</span> <span class="c1"># layout (layout is needed for 2 or more widgets)
</span>        <span class="n">lay</span><span class="p">.</span><span class="n">addWidget</span><span class="p">(</span><span class="n">lbl</span><span class="p">)</span>
        <span class="n">lay</span><span class="p">.</span><span class="n">addWidget</span><span class="p">(</span><span class="n">te</span><span class="p">)</span>

        <span class="n">mainWidget</span> <span class="o">=</span> <span class="n">QWidget</span><span class="p">()</span> <span class="c1"># we need widget to contain the layout
</span>        <span class="n">mainWidget</span><span class="p">.</span><span class="n">setLayout</span><span class="p">(</span><span class="n">lay</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">setCentralWidget</span><span class="p">(</span><span class="n">mainWidget</span><span class="p">)</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="kn">import</span> <span class="nn">sys</span>

    <span class="n">app</span> <span class="o">=</span> <span class="n">QApplication</span><span class="p">(</span><span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">)</span>
    <span class="n">w</span> <span class="o">=</span> <span class="n">MainWindow</span><span class="p">()</span>
    <span class="n">w</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>
    <span class="n">app</span><span class="p">.</span><span class="n">exec_</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/assets/images/pyqt_basic_window/3.png" alt="example" /></p>

<p>Basic. What do you expect to my first English post?</p>

<p>This spent so much time than i expected. Just.. Wow.</p>

<p>How can anybody take the time to write down the post far longer than this?</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[Finally, first English post.]]></summary></entry><entry><title type="html">pip로 requirements.txt를 앳, file… 없이 가지런하게 만드는 방법</title><link href="http://localhost:4000/posts/how-to-make-requirements-txt-out-of-pip/" rel="alternate" type="text/html" title="pip로 requirements.txt를 앳, file… 없이 가지런하게 만드는 방법" /><published>2021-12-01T00:00:00+09:00</published><updated>2021-12-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-make-requirements-txt-out-of-pip</id><content type="html" xml:base="http://localhost:4000/posts/how-to-make-requirements-txt-out-of-pip/"><![CDATA[<p>pip로 requirements.txt 앳(@), file… 없이 가지런하게 만드는 방법입니다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip freeze &gt; requirements.txt
</code></pre></div></div>
<p>위는 매우 전형적인 방식입니다. 입력하면 아래와 같은 파일이 생깁니다.</p>

<p><img src="http://localhost:4000/assets/images/pip_freeze_1.png" alt="pip_freeze_1" /></p>

<p>그런데 requirements.txt를 열어보시면 위와 같이 ~@~ 처럼 나오는 경우가 있습니다.
보통 “패키지이름==버전이름” 처럼 나와야 하는데 말이죠 ㅜ</p>

<p>보통 깃헙 저장소 소스에서 직접 다운받은 패키지를 저런 식으로 해석하더군요.</p>

<p>file… 같은 경우는 로컬이고 https… 같은 경우는 원격 저장소에서 받은 것입니다.</p>

<p>다시 다운로드할 때(특히 conda 쓰시는 분들)엔 상당히 애를 먹습니다!</p>

<p>파이썬 IDE인 파이참 같은 경우 requirements.txt에 있는 패키지들을 자동으로 인스톨해주지만, ~@~ 형식의 패키지는 인스톨 시 실패합니다.</p>

<p>그렇다면 어떻게 양식을 통일해야 하는가?</p>

<p><code class="language-plaintext highlighter-rouge">pip list --format=freeze &gt; requirements.txt</code></p>

<p>위와 같이 명령어를 작성하면 됩니다.</p>

<p><img src="http://localhost:4000/assets/images/pip_freeze_2.png" alt="pip_freeze_2" /></p>

<p>이렇게 하면 위와 같이 가지런히 나오게 됩니다.</p>

<p>하지만 명심해야할 것. 릴리즈가 되지 않은 패키지(conda를 쓴다면 conda 저장소에 없거나, pip가 검색할 수 없는 패키지이거나)는 여전히 인스톨되지 않을 것입니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[pip로 requirements.txt 앳(@), file… 없이 가지런하게 만드는 방법입니다.]]></summary></entry><entry><title type="html">파이참(PyCharm) 프로젝트 파일 안보이는 문제, 설정 창 인터프리터 부분의 nothing to show 문제 해결하기</title><link href="http://localhost:4000/posts/how-to-solve-the-nothing-to-show-problem-in-pycharm/" rel="alternate" type="text/html" title="파이참(PyCharm) 프로젝트 파일 안보이는 문제, 설정 창 인터프리터 부분의 nothing to show 문제 해결하기" /><published>2021-12-01T00:00:00+09:00</published><updated>2021-12-01T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-solve-the-nothing-to-show-problem-in-pycharm</id><content type="html" xml:base="http://localhost:4000/posts/how-to-solve-the-nothing-to-show-problem-in-pycharm/"><![CDATA[<p>파이참을 사용하다가 가끔씩 난관에 부딪칠 때가 많은데요.</p>

<p>있어야 할 프로젝트 파일 몇몇이 안보이는 일도 다 생깁니다.</p>

<p><img src="http://localhost:4000/assets/images/pycharm_nothing_to_show_2.png" alt="pycharm_nothing_to_show_2" /></p>

<p>위에서 내비게이션 뷰 모드를 Project에서 Project Files로 바꾸었을 때, Project Files에서 나오는 파일들이 Project에서도 나와야 되는데 안 나오죠!</p>

<p>그래서 프로젝트 구조 다시 설정해볼려고 설정 -&gt; 인터프리터 들어가보면 nothing to show라고만 나옵니다.</p>

<p><img src="http://localhost:4000/assets/images/pycharm_nothing_to_show.png" alt="pycharm_nothing_to_show" /></p>

<p>위 사진처럼, Project: … 와 같이 나와야 되는데 말이죠.</p>

<p>프로젝트는 분명히 존재하는데, 프로젝트 내에 있는 파일이 제대로 인식이 안되는 경우가 있다?</p>

<p>구글링해보니 <b>해답은 .idea 폴더를 삭제한 뒤 파이참을 다시 실행시키는 것이 답이라더군요.</b></p>

<p>그렇게 해보니까 다시 됩니다 ㅎㅎ 물론 사라졌던 .idea 폴더도 다시 생기고요.</p>

<p>※ .idea 폴더는 프로젝트 이름, 디렉토리 이름 등 정보를 포함한 xml 파일들이 있는 폴더입니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[파이참을 사용하다가 가끔씩 난관에 부딪칠 때가 많은데요.]]></summary></entry><entry><title type="html">jekyll에서 특수기호 raw string으로 인식시키는 방법</title><link href="http://localhost:4000/posts/how-to-input-raw-string-into-jekyll-post/" rel="alternate" type="text/html" title="jekyll에서 특수기호 raw string으로 인식시키는 방법" /><published>2021-11-30T00:00:00+09:00</published><updated>2021-11-30T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-input-raw-string-into-jekyll-post</id><content type="html" xml:base="http://localhost:4000/posts/how-to-input-raw-string-into-jekyll-post/"><![CDATA[<p>깃헙 페이지 포스트 내용 중 코드를 쓸 시, 중괄호나 밑줄 두개 같이 jekyll에서 특수기호로 취급되는 낱말은 제대로 입력이 되지 않습니다. 그럴 때는 다음과 같이 하시면 됩니다!</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;% raw %&gt;
(...)
&lt;% endraw %&gt;
</code></pre></div></div>

<p>(…) 안에 코드를 넣으시면 됩니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[깃헙 페이지 포스트 내용 중 코드를 쓸 시, 중괄호나 밑줄 두개 같이 jekyll에서 특수기호로 취급되는 낱말은 제대로 입력이 되지 않습니다. 그럴 때는 다음과 같이 하시면 됩니다! &lt;% raw %&gt; (...) &lt;% endraw %&gt;]]></summary></entry><entry><title type="html">CPU 잡아먹는 CompatTelRunner.exe이 하는 일과 비활성화하는 방법</title><link href="http://localhost:4000/posts/what-is-compattelrunners/" rel="alternate" type="text/html" title="CPU 잡아먹는 CompatTelRunner.exe이 하는 일과 비활성화하는 방법" /><published>2021-11-30T00:00:00+09:00</published><updated>2021-11-30T00:00:00+09:00</updated><id>http://localhost:4000/posts/what-is-compattelrunners</id><content type="html" xml:base="http://localhost:4000/posts/what-is-compattelrunners/"><![CDATA[<p>컴퓨터를 하다가 아무것도 안하고 있는데, 갑자기 CPU 돌아가는 소리가 크게 들립니다.</p>

<p>작업 관리자 열어보시면 그 이유가 다 나옵니다만, 윈도우를 os로 사용하시는 분들은 작업 관리자 목록을 CPU 자원 사용량 순으로 정렬할 때 CompatTelRunner.exe를 최상단에서 보신 경우가 꽤 있으실 겁니다.</p>

<h2>1. CompatTelRunner.exe는 무엇인가?</h2>

<p>윈도우 환경 향상을 위해 마소로 데이터를 자꾸자꾸 보내는 프로그램이라고 합니다.</p>

<p>보내는 양이 많다면 당연히 컴 자원을 많이 잡아먹겠죠? CPU가 팽팽 돌아갈 겁니다.</p>

<h2>2. 비활성화 방법</h2>

<p>저는 개인적으로 이런 걸 비활성화하는 것을 권장해드리지는 않습니다. 하지만 그렇게 하고 싶으신 분들을 위해 비활성화 방법을 알려드리자면요.</p>

<h4>1. 그룹정책 수정</h4>
<p>윈도우 작업표시줄 검색창이나 윈도키+R(실행) 열어서 gpedit.msc를 실행합니다.</p>

<p><b>컴퓨터 구성 -&gt; 관리 템플릿 -&gt; 윈도 구성요소 -&gt; 데이터 수집 및 preview 빌드 -&gt; 원격 분석 허용 클릭 -&gt; 사용 안함</b> 설정하시면 되겠고요.</p>

<h4>2. 레지스트리 수정</h4>
<p>regedit.exe(레지스트리 편집기)를 gpedit.msc 실행했던 방식으로 실행합니다.
<b>컴퓨터\HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\DataCollection</b>에서 타입은 32비트 DWORD값이며 이름은 AllowTelemetry고 값은 0인 변수를 만듭니다.</p>

<p><img src="http://localhost:4000/assets/images/compat_regedit.png" /></p>
<p>빈 공간 오른쪽 클릭해서 새로 만들기 하셔서 타입과 값 설정하면 위 사진처럼 나옵니다.</p>

<h4>3. 서비스에서 Connected User Experiences and Telemetry 시작유형 사용안함 설정</h4>

<p><img src="http://localhost:4000/assets/images/compat_service.png" /></p>
<h4>4. 재부팅</h4>

<p>이렇게 하면 되는 걸로 알고 있습니다. 안되면.. ㅜ</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[컴퓨터를 하다가 아무것도 안하고 있는데, 갑자기 CPU 돌아가는 소리가 크게 들립니다.]]></summary></entry><entry><title type="html">파이참(PyCharm)에서 디렉토리 이름변경 시 java.io.ioexception 오류 해결방법</title><link href="http://localhost:4000/posts/how-to-fix-java-io-ioexception-in-pycharm/" rel="alternate" type="text/html" title="파이참(PyCharm)에서 디렉토리 이름변경 시 java.io.ioexception 오류 해결방법" /><published>2021-11-30T00:00:00+09:00</published><updated>2021-11-30T00:00:00+09:00</updated><id>http://localhost:4000/posts/how-to-fix-java-io-ioexception-in-pycharm</id><content type="html" xml:base="http://localhost:4000/posts/how-to-fix-java-io-ioexception-in-pycharm/"><![CDATA[<p>파이참에서 디렉토리 이름변경 기능을 사용할 시 java.io.ioexception이 뜰 때가 있죠.</p>

<p>그럴때는 디렉토리에 있는 파일이 현재 사용중이거나 하는 경우입니다.</p>

<p>윈도우에서 폴더 지울때 “폴더 내 파일이 현재 사용중이기 때문에 지울 수 없습니다.” 하는 경우가 있죠. 그것과 비슷한 경우입니다.</p>

<p>관련 파일을 모두 종료하시고 다시 시도하시면 될 것입니다.</p>

<p>그래도 안된다면? 직접 디렉토리 이름을 탐색기에서 바꾸시면 됩니다.</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[파이참에서 디렉토리 이름변경 기능을 사용할 시 java.io.ioexception이 뜰 때가 있죠.]]></summary></entry><entry><title type="html">파이썬(Python)에서 메인 모듈 경로에 따른 상대경로 설정하는 방법</title><link href="http://localhost:4000/posts/pyqt5-how-to-set-relative-path-considering-main-module/" rel="alternate" type="text/html" title="파이썬(Python)에서 메인 모듈 경로에 따른 상대경로 설정하는 방법" /><published>2021-11-29T00:00:00+09:00</published><updated>2021-11-29T00:00:00+09:00</updated><id>http://localhost:4000/posts/pyqt5-how-to-set-relative-path-considering-main-module</id><content type="html" xml:base="http://localhost:4000/posts/pyqt5-how-to-set-relative-path-considering-main-module/"><![CDATA[<p>이럴 때가 있죠. 메인 모듈에서 특정 경로에 있는 외부 모듈을 부를 때, 그 외부 모듈에서 필요한 css 파일 따위를 못 찾아서 <b>FileNotFoundError</b>를 내뱉는 경우 말입니다.</p>

<p>이렇게 되는 이유는 메인 모듈을 중심으로 그 파일의 위치를 탐색하기 때문입니다.
외부 모듈을 중심으로 탐색하는 것이 아니라요.</p>

<p>이럴 때는 우리가 실행하는 메인 모듈의 경로와 외부 모듈의 파일 경로를 상대 경로로 연결시킬 필요가 있겠죠.</p>

<p>그래야만 메인 모듈에서 외부 모듈의 css 파일 등을 로드할 수 있으니까요.
우선 짚고 넘어가야 할 변수와 함수를 설명드리겠습니다.</p>

<h4>1. __file__ 변수</h4>
<p>이 변수는 말이죠. 이 변수가 포함된 모듈 파일(.py)의 경로를 담고 있는 변수입니다.</p>
<h4>2. os.getcwd()</h4>
<p>외장 모듈인 os의 함수인 getcwd입니다. getcwd는 메인 모듈이 포함되어 있는 디렉토리를 리턴합니다.</p>
<h4>3. os.path.relpath(a, b)</h4>
<p>os.path.relpath(a, b)는 b에 대한 a의 상대 경로를 리턴합니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">C</span><span class="p">:</span>\<span class="n">Users</span>\<span class="n">tende</span>\<span class="n">anaconda3</span>\<span class="n">envs</span>\<span class="n">projectToTestTheRemoteGitHubPackageMadeByMe</span>\<span class="n">lib</span>\<span class="n">site</span><span class="o">-</span><span class="n">packages</span>\<span class="n">pyqt_dark_calculator</span>\<span class="n">main</span><span class="p">.</span><span class="n">py</span>
<span class="c1"># a
</span><span class="n">C</span><span class="p">:</span>\<span class="n">Users</span>\<span class="n">tende</span>\<span class="n">PycharmProjects</span>\<span class="n">projectToTestTheRemoteGitHubPackageMadeByMe</span> 
<span class="c1"># b
</span><span class="p">..</span>\<span class="p">..</span>\<span class="n">anaconda3</span>\<span class="n">envs</span>\<span class="n">projectToTestTheRemoteGitHubPackageMadeByMe</span>\<span class="n">lib</span>\<span class="n">site</span><span class="o">-</span><span class="n">packages</span>\<span class="n">pyqt_dark_calculator</span>\<span class="n">main</span><span class="p">.</span><span class="n">py</span>
<span class="c1"># os.path.relpath(a, b)
</span></code></pre></div></div>

<p>이 방법을 다음과 같이 활용할 수 있습니다.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">css_file_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">relpath</span><span class="p">(</span><span class="n">__file__</span><span class="p">,</span> <span class="n">os</span><span class="p">.</span><span class="n">getcwd</span><span class="p">())),</span> <span class="sa">r</span><span class="s">'style\button.css'</span><span class="p">)</span>
</code></pre></div></div>

<p>위 코드는 제가 제작했던 <a href="https://github.com/yjg30737/pyqt-dark-calculator.git">계산기</a> 코드의 일부입니다. 이것을 깃으로 인스톨한 뒤 임포트하여 사용할 사람들을 위해 위와 같은 코드를 작성하였습니다.</p>

<p>외부 모듈에서 필요로 하는 style\button.css를 메인 모듈에서 찾아서 로드할 수 있게 하려고 css_file_path(button.css 파일 경로)를 메인 모듈 기준으로 한 상대 경로로 만들었습니다.</p>

<p>아 참, 위 코드에서 사용되었던 <b>os.path.dirname(filename)</b>은 파일을 인자로 그 파일의 폴더를 리턴해주는 함수입니다. 또 <b>os.path.join(a, b)</b> 함수는 a와 b 경로를 서로 연결시켜줍니다. a는 디렉토리여야 하고, b는 a의 하위에 위치한 파일이어야 합니다!</p>

<p>특정 리소스 파일이 필요한 외부 모듈을 작성할 때 필요한 코드 같습니다. 다른 방법이 있는지 아직 모르겠지만, 일단 저는 저 방식으로 하니까 되더군요.</p>

<p>딱히 뭐라고 포스팅을 끝내야할지 모르겠네요! 그럼!</p>]]></content><author><name>Jung Gyu Yoon</name></author><category term="posts" /><summary type="html"><![CDATA[이럴 때가 있죠. 메인 모듈에서 특정 경로에 있는 외부 모듈을 부를 때, 그 외부 모듈에서 필요한 css 파일 따위를 못 찾아서 FileNotFoundError를 내뱉는 경우 말입니다.]]></summary></entry></feed>